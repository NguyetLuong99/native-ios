#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
#ifndef KALAPASDK_SWIFT_H
#define KALAPASDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="KalapaSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
@class NSCoder;

SWIFT_CLASS("_TtC9KalapaSDK9BaseError")
@interface BaseError : NSObject <NSCoding>
- (nonnull instancetype)initFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class HomeEntity;
@class ResidentEntity;

SWIFT_CLASS("_TtC9KalapaSDK5Field")
@interface Field : NSObject <NSCoding>
@property (nonatomic, copy) NSString * _Nullable birthday;
@property (nonatomic, copy) NSString * _Nullable country;
@property (nonatomic, copy) NSString * _Nullable doe;
@property (nonatomic, copy) NSString * _Nullable doi;
@property (nonatomic, copy) NSString * _Nullable ethnicity;
@property (nonatomic, copy) NSString * _Nullable features;
@property (nonatomic, copy) NSString * _Nullable gender;
@property (nonatomic, copy) NSString * _Nullable home;
@property (nonatomic, strong) HomeEntity * _Nullable homeEntities;
@property (nonatomic, copy) NSString * _Nullable idNumber;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable national;
@property (nonatomic, copy) NSString * _Nullable poi;
@property (nonatomic, copy) NSString * _Nullable religion;
@property (nonatomic, copy) NSString * _Nullable resident;
@property (nonatomic, strong) ResidentEntity * _Nullable residentEntities;
@property (nonatomic, copy) NSString * _Nullable type;
- (nonnull instancetype)initFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC9KalapaSDK10HomeEntity")
@interface HomeEntity : NSObject <NSCoding>
- (nonnull instancetype)initFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSBundle;

SWIFT_CLASS("_TtC9KalapaSDK10KLPAlertVC")
@interface KLPAlertVC : UIViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// The app Appearance helps to build the config appearance of the SDK flow.
/// Example usage:
/// \code
/// let appearance = KLPAppearance
///     .Builder()
///     .withLanguage("vi")
///     .withMainColor("#6CB096")
///     .build()
///
/// \endcode
SWIFT_CLASS("_TtC9KalapaSDK13KLPAppearance")
@interface KLPAppearance : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (KLPAppearance * _Nonnull)Builder SWIFT_WARN_UNUSED_RESULT;
- (KLPAppearance * _Nonnull)withLanguage:(NSString * _Nonnull)language;
- (KLPAppearance * _Nonnull)withMainColor:(NSString * _Nonnull)mainColor;
- (KLPAppearance * _Nonnull)withMainTextColor:(NSString * _Nonnull)mainTextColor;
- (KLPAppearance * _Nonnull)withBtnTextColor:(NSString * _Nonnull)btnTextColor;
- (KLPAppearance * _Nonnull)withBackgroundColor:(NSString * _Nonnull)backgroundColor;
- (KLPAppearance * _Nonnull)withIsAnimatedButton:(BOOL)isAnimatedButton;
- (KLPAppearance * _Nonnull)withCornerRadiusButton:(CGFloat)cornerRadiusButton;
- (KLPAppearance * _Nonnull)build SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC9KalapaSDK13KLPBackResult")
@interface KLPBackResult : NSObject <NSCoding>
/// Returns all the available property values in the form of [String:Any] object where the key is the approperiate json key and the value is the value of the corresponding property
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
/// NSCoding required initializer.
/// Fills the data from the passed decoder
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// NSCoding required method.
/// Encodes mode properties into the decoder
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum KLPFaceLivenessVersion : NSInteger;
@class NSData;
@class Result;
@class KalapaResult;
enum KLPLogLevel : NSInteger;

/// The configuration class that helps the SDK run its flow.
/// Example usage:
/// \code
/// do {
///     let config = try KLPConfig.Builder(session: {your_session})
///         .withAppearance(appearance)
///         .withLivenessVersion(.passive)
///         .withShowResultScreen(true)
///         .withResultHandler(_resultHandler(_:))
///         .withExpiredHandler(_expiredHandler)
///         .build()
///
///     Kalapa.shared.run(flowType: .ekyc, withConfig: config)
///
/// } catch {
///     print(error)
/// }
///
/// \endcode
SWIFT_CLASS("_TtC9KalapaSDK9KLPConfig")
@interface KLPConfig : NSObject
@property (nonatomic, readonly, strong) KLPAppearance * _Nonnull appearance;
+ (KLPConfig * _Nonnull)BuilderWithSession:(NSString * _Nonnull)session;
- (KLPConfig * _Nonnull)withSession:(NSString * _Nonnull)session;
- (KLPConfig * _Nonnull)withBaseUrl:(NSString * _Nonnull)baseUrl;
- (KLPConfig * _Nonnull)withLivenessVersion:(enum KLPFaceLivenessVersion)livenessVersion;
- (KLPConfig * _Nonnull)withMRZ:(NSString * _Nullable)mrz;
- (KLPConfig * _Nonnull)withFaceDataBase64:(NSString * _Nullable)faceDataBase64;
- (KLPConfig * _Nonnull)withAppearance:(KLPAppearance * _Nonnull)appearance;
- (KLPConfig * _Nonnull)withShowResultScreen:(BOOL)showResultScreen;
- (KLPConfig * _Nonnull)withIDStepWithIsFrontId:(BOOL)isFrontId idDataHandler:(void (^ _Nonnull)(NSData * _Nonnull, NSString * _Nonnull, void (^ _Nonnull)(Result * _Nonnull)))idDataHandler;
- (KLPConfig * _Nonnull)withNFCStepWithMrz:(NSString * _Nullable)mrz nfcDatahandler:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, void (^ _Nonnull)(Result * _Nonnull)))nfcDatahandler;
- (KLPConfig * _Nonnull)withFaceStepWithLivenessVersion:(enum KLPFaceLivenessVersion)livenessVersion faceDataHandler:(void (^ _Nonnull)(NSData * _Nonnull, NSString * _Nonnull, NSString * _Nonnull, void (^ _Nonnull)(Result * _Nonnull)))faceDataHandler;
- (KLPConfig * _Nonnull)withShowLoadingHandler:(void (^ _Nullable)(UIViewController * _Nullable))showLoadingHandler;
- (KLPConfig * _Nonnull)withHideLoadingHandler:(void (^ _Nullable)(void))hideLoadingHandler;
- (KLPConfig * _Nonnull)withShowErrorAlertHandler:(void (^ _Nullable)(NSString * _Nonnull, UIViewController * _Nonnull))showErrorAlertHandler;
- (KLPConfig * _Nonnull)withResultHandler:(void (^ _Nullable)(KalapaResult * _Nullable))resultHandler;
- (KLPConfig * _Nonnull)withExpiredHandler:(void (^ _Nullable)(void))expiredHandler;
- (KLPConfig * _Nonnull)withTimeoutScanNFCHandler:(void (^ _Nullable)(void))timeoutScanNFCHandler;
- (KLPConfig * _Nonnull)withCancelSessionHandler:(void (^ _Nullable)(void))cancelSessionHandler;
- (KLPConfig * _Nonnull)withLogHandler:(void (^ _Nullable)(enum KLPLogLevel, NSString * _Nonnull, NSString * _Nonnull, NSDictionary<NSString *, id> * _Nonnull, NSDictionary<NSString *, id> * _Nonnull))logHandler;
- (BOOL)buildAndReturnError:(NSError * _Nullable * _Nullable)error completion:(void (^ _Nullable)(KLPConfig * _Nonnull))completion;
- (void)buildWithCompletionHandler:(void (^ _Nonnull)(KLPConfig * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface KLPConfig (SWIFT_EXTENSION(KalapaSDK))
@end

typedef SWIFT_ENUM(NSInteger, ErrorKind, open) {
  ErrorKindMissingSDKSession = 0,
  ErrorKindMissingBaseUrl = 1,
  ErrorKindMissingLanguage = 2,
};
static NSString * _Nonnull const ErrorKindDomain = @"KalapaSDK.KLPConfig.ErrorKind";

typedef SWIFT_ENUM(NSInteger, ResultType, open) {
  ResultTypeSuccess = 0,
  ResultTypeFailure = 1,
};

@class KalapaError;

SWIFT_CLASS("_TtCC9KalapaSDK9KLPConfig6Result")
@interface Result : NSObject
- (nonnull instancetype)initWithType:(enum ResultType)type error:(KalapaError * _Nullable)error dataResponse:(NSDictionary<NSString *, id> * _Nullable)dataResponse OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9KalapaSDK17KLPDecisionDetail")
@interface KLPDecisionDetail : NSObject
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, KLPFaceLivenessVersion, open) {
  KLPFaceLivenessVersionPassive = 0,
  KLPFaceLivenessVersionSemiActive = 1,
  KLPFaceLivenessVersionActive = 2,
};


SWIFT_CLASS("_TtC9KalapaSDK14KLPFrontResult")
@interface KLPFrontResult : NSObject <NSCoding>
/// Instantiate the instance using the passed dictionary values to set the properties values
- (nonnull instancetype)initFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
/// NSCoding required initializer.
/// Fills the data from the passed decoder
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// NSCoding required method.
/// Encodes mode properties into the decoder
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, KLPLogLevel, open) {
  KLPLogLevelDebug = 1,
  KLPLogLevelInfo = 2,
  KLPLogLevelWarning = 3,
  KLPLogLevelError = 4,
};


SWIFT_CLASS("_TtC9KalapaSDK11KLPNfcModel")
@interface KLPNfcModel : NSObject
@property (nonatomic, copy) NSString * _Nullable id_number;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable nationality;
@property (nonatomic, copy) NSString * _Nullable date_of_issuance;
@property (nonatomic, copy) NSString * _Nullable father_name;
@property (nonatomic, copy) NSString * _Nullable personal_identification;
@property (nonatomic, copy) NSString * _Nullable date_of_expiry;
@property (nonatomic, copy) NSString * _Nullable old_id_number;
@property (nonatomic, copy) NSString * _Nullable nation;
@property (nonatomic, copy) NSString * _Nullable religion;
@property (nonatomic, copy) NSString * _Nullable address;
@property (nonatomic, copy) NSString * _Nullable face_image;
@property (nonatomic, copy) NSString * _Nullable hometown;
@property (nonatomic, copy) NSString * _Nullable mother_name;
@property (nonatomic, copy) NSString * _Nullable mrz;
@property (nonatomic, copy) NSString * _Nullable date_of_birth;
@property (nonatomic, copy) NSString * _Nullable spouse_name;
@property (nonatomic, copy) NSString * _Nullable gender;
@property (nonatomic, readonly, copy) NSString * _Nullable faceImageBase64;
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)toJSONString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP9KalapaSDK19KLPRawDataProcessor_")
@protocol KLPRawDataProcessor
/// Verify raw NFC data handler
/// \param jsonNfc JSON-NFC raw data
///
/// \param completion a closure function that is used to handle the result of the verify raw NFC data
///
- (void)processNFCDataWithJsonNfc:(NSDictionary<NSString *, id> * _Nonnull)jsonNfc completion:(void (^ _Nonnull)(Result * _Nonnull))completion;
/// Verify the user’s face data handler
/// \param faceImageData The image data of the user’s face requiring verification, with applied compression.
///
/// \param faceImageBase64String The base64-encoded string representation of the user’s face image, with the default encoding options applied after compression.
///
/// \param variant Key for liveness version, where <code>p</code> is represented by <code>.passive</code>, <code>sa</code> by <code>.semiActive</code>, and <code>.a</code> by <code>.active</code>
///
/// \param completion a closure function used to handle the result of verifying the user’s facial data.
///
- (void)processLivenessDataWithFaceImageData:(NSData * _Nonnull)faceImageData faceImageBase64String:(NSString * _Nonnull)faceImageBase64String variant:(NSString * _Nonnull)variant completion:(void (^ _Nonnull)(Result * _Nonnull))completion;
/// Verify the user’s id card data handler
/// \param isFront Indicates the position of the ID card. If true, it is the front of the ID card; otherwise, it is the back of the ID card.
///
/// \param idCardImageData The image data of the user’s passport requiring verification, with applied compression.
///
/// \param idCardImageBase64String The base64-encoded string representation of the user’s face image, with the default encoding options applied after compression.
///
/// \param completion a closure function used to handle the result of verifying the user’s facial data.
///
- (void)processCaptureDataWithIsFront:(BOOL)isFront idCardImageData:(NSData * _Nonnull)idCardImageData idCardImageBase64String:(NSString * _Nonnull)idCardImageBase64String completion:(void (^ _Nonnull)(Result * _Nonnull))completion;
@end


SWIFT_CLASS("_TtC9KalapaSDK6Kalapa")
@interface Kalapa : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) Kalapa * _Nonnull shared;)
+ (Kalapa * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(Kalapa * _Nonnull)value;
/// Run the SDK with flow type support Objective-C.
/// \param flowType The flow type that determines the SDK’s behavior.
///
/// \param withConfig The configuration that helps the SDK run.
///
- (void)runWithFlow:(NSString * _Nonnull)flow withConfig:(KLPConfig * _Nonnull)withConfig;
/// Run the SDK with flow type support Objective-C.
/// \param flowType The flow type that determines the SDK’s behavior.
///
/// \param withConfig The configuration that helps the SDK run.
///
/// \param rawDataProcessor The Kalapa handler object which help SDK process data.
///
- (void)runWithFlow:(NSString * _Nonnull)flow withConfig:(KLPConfig * _Nonnull)withConfig rawDataProcessor:(id <KLPRawDataProcessor> _Nonnull)rawDataProcessor;
/// Run the SDK without flow type, need custom step in config.
/// \param withConfig The configuration that helps the SDK run.
///
/// \param from The view controller from which the SDK will be presented.
///
/// \param animated A flag indicating whether to present with animation.
///
/// \param completion A closure to be called when the SDK flow completes.
///
- (void)runWithConfig:(KLPConfig * _Nonnull)withConfig from:(UIViewController * _Nonnull)viewController animated:(BOOL)flag completion:(void (^ _Nullable)(void))completion;
- (void)restart;
- (void)closeWithIsCancel:(BOOL)isCancel completion:(void (^ _Nullable)(void))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface Kalapa (SWIFT_EXTENSION(KalapaSDK))
- (NSString * _Nonnull)getSDKVersion SWIFT_WARN_UNUSED_RESULT;
- (void)showResultWithResult:(KalapaResult * _Nonnull)result;
- (void)showResultNfcWithResult:(KalapaResult * _Nonnull)result;
- (NSString * _Nonnull)klp_localizeWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (KLPConfig * _Nonnull)getConfig SWIFT_WARN_UNUSED_RESULT;
- (void)setConfig:(KLPConfig * _Nonnull)config;
- (void)syncLocalizeWithCompletion:(void (^ _Nullable)(void))completion;
- (void)syncLocalizeWithCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
@end


SWIFT_CLASS("_TtC9KalapaSDK24KalapaBaseWithoutNibView")
@interface KalapaBaseWithoutNibView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9KalapaSDK11KalapaError")
@interface KalapaError : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9KalapaSDK12KalapaResult")
@interface KalapaResult : NSObject
@property (nonatomic, strong) KLPFrontResult * _Nullable frontResult;
@property (nonatomic, strong) KLPBackResult * _Nullable backResult;
@property (nonatomic, copy) NSString * _Nullable decision;
@property (nonatomic, copy) NSArray<KLPDecisionDetail *> * _Nullable decision_detail;
@property (nonatomic, copy) NSString * _Nullable session;
@property (nonatomic, strong) KLPNfcModel * _Nullable nfcModel;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull rawJson;
@property (nonatomic, readonly, copy) NSString * _Nullable mrzOfBackResult;
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class MrzData;

SWIFT_CLASS("_TtC9KalapaSDK3MRZ")
@interface MRZ : NSObject
@property (nonatomic, strong) MrzData * _Nullable data;
@property (nonatomic, strong) BaseError * _Nullable error;
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtCC9KalapaSDK3MRZ7MrzData")
@interface MrzData : NSObject
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end





@class QRCodeData;

SWIFT_CLASS("_TtC9KalapaSDK6QRCode")
@interface QRCode : NSObject
@property (nonatomic, strong) QRCodeData * _Nullable data;
@property (nonatomic, strong) BaseError * _Nullable error;
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtCC9KalapaSDK6QRCode10QRCodeData")
@interface QRCodeData : NSObject
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9KalapaSDK14ResidentEntity")
@interface ResidentEntity : NSObject <NSCoding>
@property (nonatomic, copy) NSString * _Nullable district;
@property (nonatomic, copy) NSString * _Nullable province;
@property (nonatomic, copy) NSString * _Nullable unknown;
@property (nonatomic, copy) NSString * _Nullable ward;
- (nonnull instancetype)initFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end












#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
